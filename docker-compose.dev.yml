version: "3.9"

services:
  listener:
    extends:
      file: docker-compose.yml
      service: listener
    build:
      context: listener
      dockerfile: Dockerfile.dev
    volumes:
      - ./listener/cmd:/app/cmd
      - ./listener/internal:/app/internal
      - ./jwt:/app/jwt  
    networks:
      dncore_network:
        aliases:
          - listener.dappnode

  mongo:
    extends:
      file: docker-compose.yml
      service: mongo
    networks:
      dncore_network:
        aliases:
          - mongo.dappnode

  ui:
    extends:
      file: docker-compose.yml
      service: ui
    networks:
      dncore_network:
        aliases:
          - ui.dappnode

  # Below services simulates web3signer setup

  web3signer:
    build:
      context: web3signer/signer
      dockerfile: Dockerfile
    depends_on:
      flyway:
        condition: service_completed_successfully
    container_name: web3signer
    restart: always
    volumes:
      - "signer_data:/app/web3signer"
    networks:
      dncore_network:
        aliases:
          - web3signer.web3signer-holesky.dappnode

  flyway:
    build:
      context: web3signer/flyway
      dockerfile: Dockerfile
    container_name: flyway
    depends_on:
      postgres:
        condition: service_started
    networks:
      dncore_network:
        aliases:
          - flyway.web3signer.dappnode

  postgres:
    build:
      context: web3signer/postgres
      dockerfile: Dockerfile
    container_name: postgres
    user: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    networks:
      dncore_network:
        aliases:
          - postgres.web3signer.dappnode

  brain:
    image: staking-brain:0.1.18
    environment:
      NETWORK: holesky
      _DAPPNODE_GLOBAL_EXECUTION_CLIENT_HOLESKY: "holesky-geth.dnp.dappnode.eth"
      _DAPPNODE_GLOBAL_CONSENSUS_CLIENT_HOLESKY: "lighthouse-holesky.dnp.dappnode.eth"
      SHARE_DATA_WITH_DAPPNODE: "true"
      VALIDATORS_MONITOR_URL: "http://listener.dappnode:8080"
      SHARE_CRON_INTERVAL: "3600"
    restart: always
    volumes:
      - "brain_data:/app/data"
    networks:
      dncore_network:
        aliases:
          - brain.web3signer.dappnode

networks:
  dncore_network:
    name: dncore_network
    external: true

volumes:
  signer_data: {}
  brain_data: {}
  mongo_data: {}
