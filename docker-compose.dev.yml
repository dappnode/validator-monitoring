version: "3.9"

services:
  listener:
    extends:
      file: docker-compose.yml
      service: listener
    build:
      context: listener
      dockerfile: Dockerfile.dev
    volumes:
      - ./listener/cmd:/app/cmd
      - ./listener/internal:/app/internal

  mongo:
    extends:
      file: docker-compose.yml
      service: mongo

  ui:
    extends:
      file: docker-compose.yml
      service: ui

  # Below services simulates web3signer setup
  
  web3signer:
    build:
      context: web3signer/signer
      dockerfile: Dockerfile
    depends_on:
      flyway:
        condition: service_completed_successfully
    networks:
      dncore_network:
        aliases:
          - web3signer.web3signer.dappnode
    restart: always

  flyway:
    build:
      context: web3signer/flyway
      dockerfile: Dockerfile
    networks:
      dncore_network:
        aliases:
          - flyway.web3signer.dappnode
    depends_on:
      postgres:
        condition: service_started

  postgres:
    build:
      context: web3signer/postgres
      dockerfile: Dockerfile
    networks:
      dncore_network:
        aliases:
          - postgres.web3signer.dappnode
    user: postgres
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  brain:
    build:
      context: web3signer/brain
      dockerfile: Dockerfile
    networks:
      dncore_network:
        aliases:
          - brain.web3signer.dappnode

networks:
  dncore_network:
    name: dncore_network
    external: true
  

volumes:
  mongo-data:
